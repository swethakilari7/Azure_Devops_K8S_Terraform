# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: Build
  jobs: 
  - job: FirstJob
    steps:
    - bash: echo Build First Job
    - bash: echo $(PiplineLevelVariable)
    - bash: echo $(Build.BuildNumber)
    - bash: echo $(Build.BuildId)
    - bash: echo $(Build.SourceBranchName)
    - bash: echo $(Build.SourceDirectory)
    - bash: echo $(Build.SourceDirectory)
    - bash: echo $(System.DefaultWorkingDirectory)
    - bash: ls -R $(System.DefaultWorkingDirectory)
    - bash: echo $(Build.ArtifactStagingDirectory)
    - bash: java -version
    - bash: node --version
    - bash: python --version
    - bash: mvn -version
    - bash: ls -R $(Build.ArtifactStagingDirectory)
    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: |
          **/*.yaml
          **/*.tf
        TargetFolder: '$(System.DefaultWorkingDirectory)'
    - bash: ls -R $(Build.ArtifactStagingDirectory)
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'
  # - job: SecondJob
  #   steps:
  #   - bash: echo Build Second Job     
# - stage: DevDeploy
#   variables:
#     environment: Dev
#   dependsOn: Build
#   jobs: 
#   - job: DevDeployJob
#     steps:
#     - bash: echo $(environment) Deploy Job
# - stage: QADeploy
#   dependsOn: Build
#   jobs: 
#   - job: QADeployJob
#     steps:
#     - bash: echo QA Deploy Job
# - stage: ProdDeploy
#   dependsOn: 
#   - DevDeploy
#   - QADeploy
#   jobs: 
#   - job: ProdDeployJob
#     steps:
#     - bash: echo Prod Deploy Job

